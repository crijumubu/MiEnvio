name: Publish Docker image

on:
  push:
    branches:
      - backend

jobs:

  avoid_redundancy:
    name: Check skip
    runs-on: ubuntu-latest
    steps:
      - name: Cancel previous redundant builds
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

  lint:
    name: Code linting
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      
      - name: Set up NodeJS
        uses: actions/setup-node@v3
        with:
          cache: 'npm'
          node-version: '18.14.1'
          cache-dependency-path: './backend/package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

  build:
    name: Build application
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Set up NodeJS
        uses: actions/setup-node@v3
        with:
          cache: 'npm'
          node-version: '18.14.1'
          cache-dependency-path: './backend/package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

  push_to_registry:
    name: Push image to Docker Hub
    needs: ["lint", "build"]
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      
      - name: Create env file
        run: echo "${{ secrets.ENV_FILE }}" > ./backend/.env

      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata for Docker image
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: crijumubu/mienvio_docker
      
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          file: ./backend/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    name: Launch docker container
    needs: "push_to_registry"
    runs-on: self-hosted
    steps:
    - name: Execute bash script for deploy
      run: bash ${{ secrets.DEPLOY_SCRIPT }}
